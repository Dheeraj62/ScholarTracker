@model ScholarTracker.Models.Publication

@{
    ViewBag.Title = "Edit Publication";
    Layout = "~/Views/Shared/Layout3.cshtml";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-edit me-2"></i>Edit Publication
                    </h3>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Edit", "Publication", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.JournalIndex, new { @class = "form-label fw-bold" })
                                    @Html.DropDownListFor(m => m.JournalIndex, new SelectList(new[] { "SCI", "Scopus" }, Model.JournalIndex),
                                             new { @class = "form-select", required = "required" })
                                    @Html.ValidationMessageFor(m => m.JournalIndex, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.JournalName, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.JournalName,
                                             new { @class = "form-control", required = "required", placeholder = "Enter journal name" })
                                    @Html.ValidationMessageFor(m => m.JournalName, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.Title, "Title Of Paper", new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.Title,
                                             new { @class = "form-control", required = "required", placeholder = "Enter paper title" })
                                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.Publisher, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.Publisher,
                                             new { @class = "form-control", required = "required", placeholder = "Enter publisher name" })
                                    @Html.ValidationMessageFor(m => m.Publisher, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.ImpactFactor, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.ImpactFactor,
                                             new { type = "number", step = "0.01", @class = "form-control", required = "required", placeholder = "0.00" })
                                    @Html.ValidationMessageFor(m => m.ImpactFactor, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.DateOfIssue, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.DateOfIssue, "{0:yyyy-MM-dd}",
                                             new { type = "date", @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(m => m.DateOfIssue, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.Volume, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.Volume,
                                             new { type = "number", @class = "form-control", required = "required", placeholder = "Volume number" })
                                    @Html.ValidationMessageFor(m => m.Volume, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.Issue, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.Issue,
                                             new { type = "number", @class = "form-control", required = "required", placeholder = "Issue number" })
                                    @Html.ValidationMessageFor(m => m.Issue, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.DOI, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.DOI,
                                             new { @class = "form-control", required = "required", placeholder = "Digital Object Identifier" })
                                    @Html.ValidationMessageFor(m => m.DOI, "", new { @class = "invalid-feedback" })
                                </div>

                                <div class="form-group mb-4">
                                    @Html.LabelFor(m => m.PageNo, new { @class = "form-label fw-bold" })
                                    @Html.TextBoxFor(m => m.PageNo,
                                             new { @class = "form-control", required = "required", placeholder = "e.g. 123-130" })
                                    @Html.ValidationMessageFor(m => m.PageNo, "", new { @class = "invalid-feedback" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-4">
                            <label class="form-label fw-bold">Publication File</label>
                            <div class="input-group">
                                <input type="file" name="PublicationFile" class="form-control" id="fileInput">
                                <label class="input-group-text" for="fileInput">
                                    <i class="fas fa-cloud-upload-alt"></i>
                                </label>
                            </div>
                            <small class="form-text text-muted">Leave blank to keep existing file</small>

                            @if (!string.IsNullOrEmpty(Model.FilePath))
                            {
                                <div class="mt-2">
                                    <span class="fw-bold">Current file: </span>
                                    <a href="@Url.Content("~" + Model.FilePath)" target="_blank" class="text-decoration-none">
                                        <i class="fas fa-file-pdf text-danger me-1"></i>@System.IO.Path.GetFileName(Model.FilePath)
                                    </a>
                                </div>
                            }
                        </div>

                        <div class="form-group mt-4 d-flex justify-content-between">
                            <button type="submit" class="btn btn-success px-4">
                                <i class="fas fa-save me-2"></i>Update Publication
                            </button>
                            @Html.ActionLink("Cancel", "PublicationD", null,
                                     new { @class = "btn btn-outline-secondary px-4" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
