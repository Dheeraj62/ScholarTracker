@model ScholarTracker.Models.CourseWork

@{
    ViewBag.Title = "courseWD";
    Layout = "~/Views/Shared/Layout3.cshtml";
}



@{
    ViewData["Title"] = "Course Work";
}

<div class="container-fluid">
    <h2 class="text-dark">Course Work</h2>

    <form asp-action="Create" asp-controller="HodCod" method="post" enctype="multipart/form-data">
        
        <div class="form-group">
            @Html.LabelFor(model => model.Mode, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.DropDownListFor(model => model.Mode, new SelectList(new[] { "Regular", "Part-Time" }), "-- Select Mode --", new { @class = "form-control", required = "required" })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Mode)
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.DropDownListFor(model => model.Status, new SelectList(new[] { "Request", "Completed" }), "-- Select Status --", new { @class = "form-control", required = "required" })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>

       
        <div class="form-group">
            @Html.LabelFor(model => model.StudyCenter, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.EditorFor(model => model.StudyCenter, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Study Center", required = "required" } })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.StudyCenter)
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", placeholder = "Example: AI (CS/IT251)", required = "required" } })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Subject)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Certificate, htmlAttributes: new { @class = "form-label text-dark" })
            <input asp-for="Certificate" type="file" class="form-control" />
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Certificate)
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Add Subject</button>
    </form>
</div>

@*@section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }*@
