@model ScholarTracker.Models.AcademicDetail

@{
    ViewBag.Title = "academicdetails";
    Layout = "~/Views/Shared/Layout3.cshtml";
}

<!--<div class="container-fluid">

    <h2>Academic Details (fill in sequence from highest to lowest)</h2>

    <div class="form-container">
        <label>Degree Type:</label>
        <select id="degree">
            <option value="">Select Degree</option>
            <option value="PG">PG</option>
            <option value="UG">UG</option>
        </select>

        <label>Course:</label>
        <input type="text" id="course">

        <label>Branch:</label>
        <input type="text" id="branch">

        <label>University:</label>
        <input type="text" id="university">

        <label>Year Of Passing:</label>
        <input type="number" id="year" min="1900" max="2099">

        <label>Percentage:</label>
        <input type="number" id="percentage" min="0" max="100">

        <button id="addBtn" class="color1">ADD</button>
    </div>
    <!-- Academic records table -->
<!--<table class="table mt-4">
    <thead>
        <tr>
            <th>Degree Type</th>
            <th>Course</th>
            <th>Branch</th>
            <th>University</th>
            <th>Year Of Passing</th>
            <th>Percentage</th>
        </tr>
    </thead>
    <tbody>

</table>

<form asp-action="FinalSave" method="post">
    <button type="submit" class="btn btn-success color1">FINAL SAVE</button>
</form>-->
@*</div>*@-->


<div class="container-fluid">
    <h2 class="text-dark">Academic Details (fill in sequence from highest to lowest)</h2>

    <div class="form-container">
        <div class="form-group">
            @Html.LabelFor(model => model.DegreeType, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.DropDownListFor(model => model.DegreeType,
                new SelectList(new[] { "PG", "UG" }), "-- Select Degree --",
                new { @class = "form-control", required = "required", id = "degree" })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.DegreeType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Course", id = "course", required = "required" } })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Course)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.EditorFor(model => model.Branch, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Branch", id = "branch", required = "required" } })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Branch)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter University", id = "university", required = "required" } })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.University)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearOfPassing, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.EditorFor(model => model.YearOfPassing, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1900", max = "2099", id = "year", required = "required" } })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.YearOfPassing)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "form-label text-dark" })
            @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", max = "100", id = "percentage", required = "required" } })
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Percentage)
            </div>
        </div>

        <button type="button" id="addBtn" class="btn btn-primary mt-3">ADD</button>
    </div>

    <!-- Academic records table -->
    <table class="table mt-4">
        <thead>
            <tr>
                <th>Degree Type</th>
                <th>Course</th>
                <th>Branch</th>
                <th>University</th>
                <th>Year Of Passing</th>
                <th>Percentage</th>
            </tr>
        </thead>
        <tbody id="academicTableBody">
            <!-- Academic records will be added dynamically using JS -->
        </tbody>
    </table>

    <form asp-action="FinalSave" method="post">
        <button type="submit" class="btn btn-success color1">FINAL SAVE</button>
    </form>
</div>
